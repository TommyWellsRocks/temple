// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/docker-existing-docker-compose
{
	"name": "bodyproject",

	// Update the 'dockerComposeFile' list if you have more compose files or use different names.
	// The .devcontainer/docker-compose.yml file contains any overrides you need/want to make.
	"dockerComposeFile": ["../docker-compose.yml", "docker-compose.yml"],

	// The 'service' property is the name of the service for the container that VS Code should
	// use. Update this value and .devcontainer/docker-compose.yml to the real service name.
	"service": "app",

	// The optional 'workspaceFolder' property is the path VS Code should open by default when
	// connected. This is typically a file mount in .devcontainer/docker-compose.yml
	"workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",

	// Features to add to the dev container. More info: https://containers.dev/features.
	// "features": {},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment the next line if you want start specific services in your Docker Compose config.
	// "runServices": [],

	// Uncomment the next line if you want to keep your containers running after VS Code shuts down.
	// "shutdownAction": "none",

	// Uncomment the next line to run commands after the container is created.
	// "postCreateCommand": "cat /etc/os-release",

	// Configure tool-specific properties.
	"customizations": {
		"vscode": {
			"extensions": [
				"aaron-bond.better-comments",
				"adrianwilczynski.toggle-hidden",
				"eamodio.gitlens",
				"esbenp.prettier-vscode",
				"formulahendry.auto-close-tag",
				"formulahendry.auto-rename-tag",
				"formulahendry.code-runner",
				"ms-python.black-formatter",
				"ms-python.debugpy",
				"ms-python.python",
				"ms-python.vscode-pylance",
				"ms-vscode-remote.remote-containers",
				"ms-vscode.vscode-typescript-next",
				"pkief.material-icon-theme",
				"rangav.vscode-thunder-client",
				"ritwickdey.liveserver",
				"streetsidesoftware.code-spell-checker",
				"tal7aouy.theme",
				"tomoki1207.selectline-statusbar",
				"yzhang.markdown-all-in-one"
			],
			"settings": {
				"files.exclude": {
					"**/vite.config.js": false,
					"**/.DS_Store": false,
					"**/.devcontainer": false,
					"**/.dockerignore": false,
					"**/.env": false,
					"**/.git": false,
					"**/.github": false,
					"**/.gitignore": false,
					"**/.vscode": false,
					"**/docker-compose.yml": false,
					"**/*node_modules": false,
					"**/tsconfig.json": false,
					"**/Dockerfile": false,
					"**/package.json": false,
					"**/package-lock.json": false,
					"**/*.d.ts": false
				},
				"explorer.confirmDelete": false,
				"editor.minimap.enabled": false,
				"editor.defaultFormatter": "esbenp.prettier-vscode",
				"[python]": {
					"editor.defaultFormatter": "ms-python.black-formatter",
					"editor.formatOnSave": true
				},
				"workbench.iconTheme": "material-icon-theme",
				"explorer.confirmDragAndDrop": false,
				"reactSnippets.settings.importReactOnTop": false,
				"jupyter.askForKernelRestart": false,
				"terminal.integrated.focusAfterRun": "terminal",
				"gitlens.outputLevel": "error",
				"jest.autoRevealOutput": "on-exec-error",
				"workbench.colorTheme": "Theme Darker",
				"code-runner.executorMap": {
					"javascript": "node",
					"java": "cd $dir && javac $fileName && java $fileNameWithoutExt",
					"c": "cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
					"zig": "zig run",
					"cpp": "cd $dir && g++ $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
					"objective-c": "cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
					"php": "php",
					"python": "python3 -u",
					"perl": "perl",
					"perl6": "perl6",
					"ruby": "ruby",
					"go": "go run",
					"lua": "lua",
					"groovy": "groovy",
					"powershell": "powershell -ExecutionPolicy ByPass -File",
					"bat": "cmd /c",
					"shellscript": "bash",
					"fsharp": "fsi",
					"csharp": "scriptcs",
					"vbscript": "cscript //Nologo",
					"typescript": "tsx",
					"coffeescript": "coffee",
					"scala": "scala",
					"swift": "swift",
					"julia": "julia",
					"crystal": "crystal",
					"ocaml": "ocaml",
					"r": "Rscript",
					"applescript": "osascript",
					"clojure": "lein exec",
					"haxe": "haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",
					"rust": "cd $dir && rustc $fileName && $dir$fileNameWithoutExt",
					"racket": "racket",
					"scheme": "csi -script",
					"ahk": "autohotkey",
					"autoit": "autoit3",
					"dart": "dart",
					"pascal": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
					"d": "cd $dir && dmd $fileName && $dir$fileNameWithoutExt",
					"haskell": "runghc",
					"nim": "nim compile --verbosity:0 --hints:off --run",
					"lisp": "sbcl --script",
					"kit": "kitc --run",
					"v": "v run",
					"sass": "sass --style expanded",
					"scss": "scss --style expanded",
					"less": "cd $dir && lessc $fileName $fileNameWithoutExt.css",
					"FortranFreeForm": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
					"fortran-modern": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
					"fortran_fixed-form": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
					"fortran": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
					"sml": "cd $dir && sml $fileName",
					"mojo": "mojo run"
				},
				"code-runner.runInTerminal": true,
				"better-comments.tags": [
					{
						"tag": "!",
						"color": "black",
						"strikethrough": false,
						"underline": false,
						"backgroundColor": "#ff0000",
						"bold": false,
						"italic": false
					},
					{
						"tag": "?",
						"color": "white",
						"strikethrough": false,
						"underline": false,
						"backgroundColor": "#0008ff",
						"bold": false,
						"italic": false
					},
					{
						"tag": "//",
						"color": "#474747",
						"strikethrough": true,
						"underline": false,
						"backgroundColor": "transparent",
						"bold": false,
						"italic": false
					},
					{
						"tag": "todo",
						"color": "black",
						"strikethrough": false,
						"underline": false,
						"backgroundColor": "#ffff00",
						"bold": false,
						"italic": false
					},
					{
						"tag": "*",
						"color": "black",
						"strikethrough": false,
						"underline": false,
						"backgroundColor": "#00f7ff",
						"bold": false,
						"italic": false
					}
				],
				"tabnine.experimentalAutoImports": true,
				"workbench.sideBar.location": "right",
				"prettier.tabWidth": 4,
				"prettier.useTabs": true,
				"prettier.printWidth": 100,
				"editor.formatOnSave": true,
				"editor.formatOnType": true,
				"files.autoSave": "afterDelay",
				"window.confirmSaveUntitledWorkspace": false,
				"launch": {
					"configurations": [],
					"compounds": []
				},
				"javascript.updateImportsOnFileMove.enabled": "always",
				"gitlens.graph.minimap.enabled": false,
				"gitlens.graph.layout": "editor",
				"gitlens.hovers.currentLine.over": "line",
				"gitlens.codeLens.authors.command": false,
				"gitlens.codeLens.recentChange.command": "gitlens.showCommitsInView",
				"gitlens.codeLens.authors.enabled": false,
				"gitlens.hovers.enabled": false,
				"window.commandCenter": false,
				"extensions.ignoreRecommendations": true,
				"terminal.integrated.cursorBlinking": true,
				"typescript.updateImportsOnFileMove.enabled": "always",
				"workbench.startupEditor": "none"
			}
		}
	}

	// Uncomment to connect as an existing user other than the container default. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "devcontainer"
}
